Traceback (most recent call last):
  File "/home/phuijse/.conda/envs/info183/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/phuijse/.conda/envs/info183/lib/python3.8/site-packages/nbclient/client.py", line 1082, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/phuijse/.conda/envs/info183/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/phuijse/.conda/envs/info183/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/home/phuijse/.conda/envs/info183/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/home/phuijse/.conda/envs/info183/lib/python3.8/site-packages/nbclient/client.py", line 535, in async_execute
    await self.async_execute_cell(
  File "/home/phuijse/.conda/envs/info183/lib/python3.8/site-packages/nbclient/client.py", line 827, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/phuijse/.conda/envs/info183/lib/python3.8/site-packages/nbclient/client.py", line 735, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
fig, ax = plt.subplots(2, figsize=(9, 6))
t, dt = np.linspace(0, 5, num=500, retstep=True)
np.random.seed(0)
u = np.sin(2.0*np.pi*t*5)  
# u[250:] += 5
u += np.array([5*np.exp(-np.absolute(tt-1)/0.2) if tt>1 else 0 for tt in t])
u += np.array([5*np.exp(-np.absolute(tt-3)/0.2) if tt>3 else 0 for tt in t])
u_noisy = u + 0.5*np.random.randn(len(t))

def update(mu, beta, L):
    ax[0].cla(); ax[1].cla(); 
    u_pred = np.zeros(shape=(len(u_noisy), 2))
    #LMS
    w = np.zeros(shape=(L+1, ))
    for k in range(L+1, len(u_noisy)):
        u_window = u_noisy[k-L-1:k]
        norm = np.sum(u_window**2) + 1e-6
        u_pred[k, 0] = np.dot(w, u_window)
        if k < len(u):
            w += 2*mu*(u_noisy[k] - u_pred[k, 0])*u_window/norm
    #RLS
    w = np.zeros(shape=(L+1, ))
    delta = 1.
    Phi_inv = delta*np.eye(L+1); 
    for k in range(L+1, len(u_noisy)):
        u_window = u_noisy[k-L-1:k]
        # Calcular ganancia
        gain = np.dot(Phi_inv, u_window)/(beta + np.dot(np.dot(u_window.T, Phi_inv), u_window))        
        # Calcular error
        u_pred[k, 1] = np.dot(w, u_window)
        err = u_noisy[k] - u_pred[k, 1]
        # Actualizar pesos
        w += np.dot(gain, err)
        # Actualizar el inverso de la matriz de correlaciÃ³n
        Phi_inv = (1./beta)*(1. - np.sum(gain*u_window))*Phi_inv
    
    ax[0].plot(t, u_noisy, 'k.', alpha=0.5); 
    ax[0].plot(t, u, 'g-', alpha=0.5, label='Real');  
    ax[0].plot(t, u_pred[:, 0], label='LMS'); 
    ax[0].plot(t, u_pred[:, 1], label='RLS'); ax[0].legend(loc=1)
    ax[1].plot((u - u_pred[:, 0])**2, label='LMS')
    ax[1].plot((u - u_pred[:, 1])**2, label='RLS'); ax[1].legend()

    
interact(update, 
         mu=FloatSlider_nice(step=0.01, max=0.1, min=0.01),
         beta=FloatSlider_nice(step=0.01, max=1., min=0.5, value=0.9),
         L=SelectionSlider_nice(options=[1, 5, 10, 20, 50], value=10));
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
[0;32m<ipython-input-2-ca301585dc17>[0m in [0;36m<module>[0;34m[0m
[1;32m     43[0m [0;34m[0m[0m
[1;32m     44[0m [0;34m[0m[0m
[0;32m---> 45[0;31m interact(update, 
[0m[1;32m     46[0m          [0mmu[0m[0;34m=[0m[0mFloatSlider_nice[0m[0;34m([0m[0mstep[0m[0;34m=[0m[0;36m0.01[0m[0;34m,[0m [0mmax[0m[0;34m=[0m[0;36m0.1[0m[0;34m,[0m [0mmin[0m[0;34m=[0m[0;36m0.01[0m[0;34m)[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m     47[0m          [0mbeta[0m[0;34m=[0m[0mFloatSlider_nice[0m[0;34m([0m[0mstep[0m[0;34m=[0m[0;36m0.01[0m[0;34m,[0m [0mmax[0m[0;34m=[0m[0;36m1.[0m[0;34m,[0m [0mmin[0m[0;34m=[0m[0;36m0.5[0m[0;34m,[0m [0mvalue[0m[0;34m=[0m[0;36m0.9[0m[0;34m)[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;31mNameError[0m: name 'interact' is not defined
NameError: name 'interact' is not defined

